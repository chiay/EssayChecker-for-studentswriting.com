{"version":3,"file":"compromise-export.js","sources":["../src/export/_reduceWords.js","../src/export/_reduceTags.js","../src/export/_topk.js","../src/export/index.js","../src/import/index.js","../src/index.js"],"sourcesContent":["const reduceWords = function(allWords) {\n  let topWords = Object.keys(allWords).filter(str => allWords[str] >= 2)\n  topWords = topWords.sort((a, b) => {\n    if (allWords[a] > allWords[b]) {\n      return -1\n    } else if (allWords[a] < allWords[b]) {\n      return 1\n    }\n    return 0\n  })\n  let order = topWords.reduce((h, str, i) => {\n    h[str] = i\n    return h\n  }, {})\n  return order\n}\nmodule.exports = reduceWords\n","// remove implied tags, like 'Noun' when we have 'Plural'\nconst reduceTags = function(tags, world) {\n  let tagset = world.tags\n  let implied = []\n  tags.forEach(tag => {\n    if (tagset[tag] && tagset[tag].isA) {\n      implied = implied.concat(tagset[tag].isA)\n    }\n  })\n  implied = implied.reduce((h, tag) => {\n    h[tag] = true\n    return h\n  }, {})\n  tags = tags.filter(tag => !implied[tag])\n  // tags\n  return tags\n}\n\nmodule.exports = reduceTags\n","// compress a list of things by frequency\nconst topk = function(list) {\n  let counts = {}\n  list.forEach(a => {\n    counts[a] = counts[a] || 0\n    counts[a] += 1\n  })\n  let arr = Object.keys(counts)\n  arr = arr.sort((a, b) => {\n    if (counts[a] > counts[b]) {\n      return -1\n    } else {\n      return 1\n    }\n  })\n  // arr = arr.filter(a => counts[a] > 1)\n  return arr.map(a => [a, counts[a]])\n}\nmodule.exports = topk\n","const reduceWords = require('./_reduceWords')\nconst reduceTags = require('./_reduceTags')\nconst topk = require('./_topk')\n\n/** store a parsed document for later use */\nconst exportFn = function() {\n  let phraseList = this.json({ text: false, trim: false, terms: { tags: true, whitespace: true } })\n  let allTags = []\n  let allWords = {}\n  phraseList = phraseList.map(p => {\n    return p.terms.map(t => {\n      allWords[t.text] = allWords[t.text] || 0\n      allWords[t.text] += 1\n      allWords[t.pre] = allWords[t.pre] || 0\n      allWords[t.pre] += 1\n      allWords[t.post] = allWords[t.post] || 0\n      allWords[t.post] += 1\n      //remove any implied tags, first\n      t.tags = reduceTags(t.tags, this.world)\n      allTags = allTags.concat(t.tags)\n      return [t.pre, t.text, t.post, t.tags]\n    })\n  })\n  // compress the top tags\n  allTags = topk(allTags)\n  let tagMap = {}\n  allTags.forEach((a, i) => {\n    tagMap[a[0]] = i\n  })\n\n  //compress the top words\n  let wordMap = reduceWords(allWords)\n\n  phraseList.forEach(arr => {\n    arr.forEach(a => {\n      // use index numbers instead of redundant tag-names\n      a[3] = a[3].map(tag => tagMap[tag]).join(',')\n      // use index numbers instead of re-used words\n      a[0] = wordMap[a[0]] !== undefined ? wordMap[a[0]] : a[0]\n      a[1] = wordMap[a[1]] !== undefined ? wordMap[a[1]] : a[1]\n      a[2] = wordMap[a[2]] !== undefined ? wordMap[a[2]] : a[2]\n    })\n  })\n  // pivot wordlist\n  let wordList = []\n  Object.keys(wordMap).forEach(k => {\n    wordList[wordMap[k]] = k\n  })\n\n  return {\n    tags: Object.keys(tagMap),\n    words: wordList,\n    list: phraseList,\n  }\n}\nmodule.exports = exportFn\n","//create json data from .export() output\nconst loadFromExport = function(json) {\n  if (typeof json === 'string') {\n    json = JSON.parse(json)\n  }\n  //create Phrase objects\n  let phrases = json.list.map(termArr => {\n    //unpack each term\n    let terms = termArr.map(a => {\n      //unpack tags\n      let tags = a[3].split(',').map(str => json.tags[str])\n      return {\n        pre: typeof a[0] === 'number' ? json.words[a[0]] : a[0],\n        text: typeof a[1] === 'number' ? json.words[a[1]] : a[1],\n        post: typeof a[2] === 'number' ? json.words[a[2]] : a[2],\n        tags: tags.filter(tag => tag),\n      }\n    })\n    return { terms: terms } //minimum phrase info\n  })\n  return phrases\n}\n\nmodule.exports = loadFromExport\n","const exportFn = require('./export')\nconst loadFn = require('./import')\n\nconst addMethods = function(Doc, world, nlp) {\n  /** create a compressed json object from this document */\n  Doc.prototype.export = exportFn\n\n  /** create a compromise object from compressed export data */\n  nlp.import = function(data) {\n    let json = loadFn(data, this.world)\n    return nlp.fromJSON(json)\n  }\n}\n\nmodule.exports = addMethods\n"],"names":["reduceWords","allWords","topWords","Object","keys","filter","str","sort","a","b","order","reduce","h","i","reduceTags","tags","world","tagset","implied","forEach","tag","isA","concat","topk","list","counts","arr","map","exportFn","phraseList","json","text","trim","terms","whitespace","allTags","p","t","pre","post","tagMap","wordMap","join","undefined","wordList","k","words","loadFromExport","JSON","parse","phrases","termArr","split","addMethods","Doc","nlp","prototype","data","loadFn","fromJSON"],"mappings":"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"}